html {
    /* EVERYTHING is based on this. These are potentially overwritten in `src/index.tsx`. */
    --video-height: calc((9 / 16) * 100vw);
    --video-width: 100vw;

    /* sizing relative to video */
    --gutter: calc(0.01611 * var(--video-width));
    --header-height: calc(0.1171875 * var(--video-height));

    --one-column-body-width: calc(var(--video-width) - (2 * var(--gutter)));
    --one-column-body-height: calc(0.1536 * var(--video-height));

    --two-column-body-width: calc(0.3119 * var(--video-width));
    --two-column-body-height: calc(var(--video-height) - var(--header-height) - var(--gutter));

    --empty-space-background-color: #0a0a0a;
    --background-color: #141414;

    /* responsive typography */
    --min-font: 8px;
    --max-font: 16px;
    --min-vw: 600px;
    --max-vw: 1366px;
    --min-vh: 600px;
    --max-vh: 1000px;

    box-sizing: border-box;
}

*, *:before, *:after {
    box-sizing: inherit;
}

html, body {
    background-color: var(--empty-space-background-color);
}

html, body, main {
    width: 100vw;
    height: 100vh;
    margin: 0;
    padding: 0;
    border: 0;
    overflow: hidden;
    position: fixed;
}

body {
    /* prevent rubberbanding */
    overscroll-behavior-y: none;

    /* just, don't do anything */
    touch-action: none;
}

main {
    background-color: var(--background-color);
    position: relative;
    font-family: 'Overpass', sans-serif;
    line-height: normal;
    letter-spacing: normal;
    font-stretch: normal;
}

/*
 * -- Response typography --
 *
 * The smallest dimension of the screen controls the sizing of the font. E.g., when the height is greater than the width,
 * the width controls the font-size. This will set 1em within this parent container. All child element font-sizes can
 * then be based on em to take advantage of these calculations.
 *
 * General formula:
 * calc([minimum font size with unit] + ([maximum font size] - [minimum font size]) * ((100v(w|h) - [minimum viewport dimension with unit]) / ([maximum viewport dimension] - [minimum viewport dimension])));
 *
 * Reference:
 * https://css-tricks.com/books/volume-i/scale-typography-screen-size/
 */

@media (orientation: portrait) {
    main {
        font-size: calc(var(--min-font) + 8 * ((100vw - var(--min-vw)) / (1366 - 600)));
    }
}

@media (orientation: portrait) and (min-width: var(--max-vw)) {
    main {
        font-size: var(--max-font);
    }
}

@media (orientation: landscape) {
    main {
        font-size: calc(var(--min-font) + 8 * ((100vh - var(--min-vh)) / (1000 - 400)));
    }
}

@media (orientation: landscape) and (min-height: var(--max-vh)) {
    main {
        font-size: var(--max-font);
    }
}
