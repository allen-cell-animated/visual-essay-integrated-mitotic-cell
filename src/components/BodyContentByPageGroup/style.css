/**
 *  CONSTANT LAYOUT
 */
.section {
    --background-color: #1e1e1e;
    --font-color: #ffffff;
    --font-weight: 300;

    position: absolute;
    transition: top 0.5s ease-in;
    background: var(--background-color);
    top: var(--header-height);
    padding: 0 var(--gutter);
    overflow-y: hidden;
    color: var(--font-color);
    font-weight: var(--font-weight);

    /*
     * https://github.com/ccurtin/postcss-responsive-font
     * min-font-size max-font-size min-viewport-width max-viewport-width
     * Cannot use custom properties for values.
     */
    font-size-responsive: 12px 22px 480px 1366px;
}

.container {
    position: relative;
    height: 100%;
    width: 100%;
}

.gradient {
    position: absolute;
    height: 3em;
    width: 100%;
}

.gradient-top {
    composes: gradient;
    top: 0;
    background: linear-gradient(to bottom, #1e1e1e80, #1e1e1e00);
}

.gradient-bottom {
    composes: gradient;
    bottom: 0;
    background: linear-gradient(to top, #1e1e1e80, #1e1e1e00);
}

.content {
    position: absolute;
    transition: top 0.3s ease-in;

    /* vertical centering */
    top: 50%; /* push top to middle of its container */
    transform: translateY(-50%); /* nudge up 50% of content height to accomplish vertical centering */
}

.content p:last-of-type {
    margin-bottom: 0;
}

.two-column-layout {
    height: var(--two-column-body-height);
    width: var(--two-column-body-width);

    /* tether to right edge of video, which is horizontally centered in the page */
    --video-right-edge: calc(50% + var(--video-width) / 2);
    left: calc(var(--video-right-edge) - var(--gutter)); /* push all the way to the right edge of the video, minus gutter */
    transform: translateX(-100%); /* pull back in 100% of content width to accomplish tethering to right edge of video */
}

.one-column-layout {
    width: var(--one-column-body-width);
    height: var(--one-column-body-height);
    left: 50%;
    transform: translateX(-50%);
}

/* hide gradient in one-column layout; no text stacking allowed */
.one-column-layout .gradient {
    display: none;
}

.inline-video {
    display: block;
    width: 100%;
    object-fit: contain;
    object-position: center center;
}

.inline-image {
    width: 100%;
}

/**
 *  ANIMATION HOOKS
 */
.initial {
    top: 100%; /* below viewport */
    opacity: 0;
}

.exited {
    top: 0; /* above viewport once transform is applied */
    transform: translateY(-100%);
    opacity: 0;
}

/*
    move the next sibling of an element that has entered and is stacked
    up on deck
*/
.stack.initial {
    top: 100%;
}


.stack.exited {
    top: 0;
}