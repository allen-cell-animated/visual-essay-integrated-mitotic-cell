.section {
    --copy-color: #f2f2f2;
    --min-font: 8px;
    --max-font: 16px;
    --min-vw: 600px;
    --max-vw: 1366px;
    --min-vh: 400px;
    --max-vh: 1000px;

    top: 0;
    height: var(--video-height);
    width: 100%;
}

/*
 * -- Response typography --
 *
 * The smallest dimension of the screen controls the sizing of the font. E.g., when the height is greater than the width,
 * the width controls the font-size. This will set 1em within this parent container. All child element font-sizes can
 * then be based on em to take advantage of these calculations.
 *
 * General formula:
 * calc([minimum font size with unit] + ([maximum font size] - [minimum font size]) * ((100v(w|h) - [minimum viewport dimension with unit]) / ([maximum viewport dimension] - [minimum viewport dimension])));
 *
 * Reference:
 * https://css-tricks.com/books/volume-i/scale-typography-screen-size/
 */

@media (orientation: portrait) {
    .section {
        font-size: calc(var(--min-font) + 8 * ((100vw - var(--min-vw)) / (1366 - 600)));
    }
}

@media (orientation: portrait) and (min-width: var(--max-vw)) {
    .section {
        font-size: var(--max-font);
    }
}

@media (orientation: landscape) {
    .section {
        font-size: calc(var(--min-font) + 8 * ((100vh - var(--min-vh)) / (1000 - 400)));
    }
}

@media (orientation: landscape) and (min-height: var(--max-vh)) {
    .section {
        font-size: var(--max-font);
    }
}

.container {
    position: relative;
    height: 100%;
    width: var(--video-width);
    margin: 0 auto;
}

.button {
    border: none;
    border-radius: 4px;
    background-color: #2e2e2e;
    cursor: pointer;

    color: var(--copy-color);
    font-size: 2em;
    font-weight: 300;
    font-style: normal;
    font-stretch: normal;
    line-height: normal;
    letter-spacing: -0.7px;
    text-align: center;

    /* any em based values must go below font-size declaration */
    position: absolute;
    top: 22px;
    width: 8em;
    max-width: 280px;
    height: 3em;
    max-height: 66px;
}

.button.left {
    left: 0;
    transform: translateX(50%);
}

.button.right {
    right: 0;
    transform: translateX(-50%);
}

.heading {
    position: absolute;
    width: 100%;
    bottom: 0;
    left: 50%;
    transform: translate(-50%, -2em);

    /* flex parent */
    display: flex;
    flex-direction: column;
    justify-content: center;
}

.scroll-hint {
    font-size: 1.25em;
}

p.scroll-hint {
    color: var(--copy-color);
    font-weight: 300;
    font-style: normal;
    font-stretch: normal;
    line-height: normal;
    letter-spacing: -0.4px;
    text-align: center;
    margin: 0;
}

svg.scroll-hint {
    height: 1em;
}

.scroll-hint path {
    fill: var(--copy-color);
}

.title {
    width: 100%;
    margin: 0 0 0.25em 0;
    color: var(--copy-color);
    font-size: 3.75em;
    font-weight: 300;
    font-style: normal;
    font-stretch: normal;
    line-height: normal;
    letter-spacing: -1.2px;
    text-align: center;
}
